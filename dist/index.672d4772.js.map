{"mappings":"AAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAE/C,MAAM,UAAU,GAAG,CAAC,GAAG,GAAK;IACxB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC7C,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;KAEvB;CACJ;AACD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,UAAU,CAAC,CAAC,CAAC;AAGjB,MAAM,CAAC,GAAG;IACN,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;CACL,AAAC;AAEF,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAK;IAEvB,OAAO;WAAI,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;KAAC,CAAA;CACrD,CAAC;AAEF,IAAK,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAC,EAAE,CAC/B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;IACpC,IAAI,EAAC,GAAG,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EACT,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,4BAA4B,CAAC;aAE7D,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,wBAAwB,CAAC;WAG7D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EACV,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,4BAA4B,CAAC;SAE7D,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,wBAAwB,CAAC;CAIpE;AAIL,mBAAmB;AAEnB,MAAM,WAAW,GAAG;IAChB;QACI,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,uDAAuD;KAChE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,uDAAuD;KAChE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,qDAAqD;KAC9D;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,yDAAyD;KAClE;IAAE;QACC,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,uDAAuD;KAChE;IAAE;QACC,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,uDAAuD;KAChE;CACJ,AAAC;AACF,8BAA8B;AAC9B,MAAM,iBAAiB,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,GAAK;IAC7D,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC1C,GAAG,CAAC,YAAY,CACZ,KAAK,EACL,KAAK,IAAI,OAAO,GACV,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,GAC5B,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,IAAI,CACzC,CAAC;QACF,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QACxD,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;KACrB;CACJ;AACD,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC;AAC9C,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC;AAE9C,8BAA8B;AAC9B,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,GAAK;IAC5D,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;IAC1C,GAAG,CAAC,YAAY,CACZ,KAAK,EACL,KAAK,IAAI,OAAO,GACV,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,GAC5B,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,IAAI,CACzC,CAAC;IACF,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACxD,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;CACzB;AAED,MAAM,UAAU,GAAG;IACf;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,OAAO;KACjC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,OAAO;KACjC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,QAAQ;KAClC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;IACD;QACI,GAAG,CAAC,CAAC,CAAC;QAAE,OAAO;AAAE,SAAC;AAAE,SAAC;QAAE,MAAM;KAChC;CACJ;AACD,UAAU,CAAC,OAAO,CAAC,CAAA,EAAE,GAAI;IACrB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;CAC/C,CAAC;AAEF,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,GAAK;IAEnC,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM,AAAC;IAEvB,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,cAAc,EAEtC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC;IAG7B,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,EAC/B,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAGjD,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,EAC/B,QAAQ,CAAC,OAAO,CAAC;CAIxB,CAAC;AAEF,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,GAAK;IACjC,YAAY,EAAE;IAEd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE;YAE5B,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAC1B;gBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBACzB,IAAI,CAAC,KAAK,CAAC,EAAE;wBACT,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,GAAG,CAAC,QAAQ,CAAC;wBAClB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,0BAA0B;wBAC1B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,yCAAyC;wBACzC,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;qBAG/B;oBACD,IAAI,CAAC,GAAG,CAAC,EAAE;wBACP,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,GAAG,CAAC,QAAQ,CAAC;wBAClB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAEzB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;oBAE5B,2CAA2C;qBAC9C;iBAEJ;aAAA,MACE;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBACzB,IAAI,CAAC,KAAK,CAAC,EAAE;wBACT,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,GAAG,CAAC,QAAQ,CAAC;wBAClB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,0BAA0B;wBAC1B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,yCAAyC;wBAEzC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC,CAAC;wBAE7B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAEzE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;qBAG/B;oBACD,IAAI,CAAC,GAAG,CAAC,EAAE;wBACP,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,GAAG,CAAC,QAAQ,CAAC;wBAClB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAEzB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;wBAE5B,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,EAEhB;4BAAA,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EACrD,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;yBAC3B,AACJ;wBACD,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACX,UAAU,EAEhB;4BAAA,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EACrD,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACZ,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;yBAC3B,AACJ;oBAED,2CAA2C;qBAC9C;iBAEJ;aACJ;SAEJ;KAER;CACJ;AAED,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAK;IACpB,YAAY,EAAE;IACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QAExB,IAAI,OAAO,GAAG,CAAC,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACjC,IAAI,GACJ,KAAK;QACX,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;QACnB,OAAO,IAAI,EAAE,CACR,SAAS,CACT,GAAG,CAAC,QAAQ,CAAC;QAClB,IAAI,YAAY,GAAG,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,YAAY,GAAG,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,aAAa,GAAG,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9C,4BAA4B;QAC5B,IAAI,OAAO,EAAE;YACT,gBAAgB,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACjD,gBAAgB,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/C,aAAa,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/C,aAAa,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjD;KAEJ;CAER;AACD,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,GAAG,GAAK;IAC9B,IAAI,GAAG,GAAG,EAAE,AAAC;IACb,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAEf,OAAO,GAAG,CAAA;CACb;AACD,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,GAAK;IAE5B,IAAI,GAAG,GAAG,EAAE,AAAC;IACb,IAAI,KAAK,KAAK,CAAC,EACX,OAAO,GAAG,CAAA;IAEd,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAEf,OAAO,GAAG,CAAA;CACb;AACD,MAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,GAAK;IAE7C,IAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE;QAC5C,0EAA0E;QAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EACvB,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACN,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;QAG5B,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EAC9C,uCAAuC;QACvC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;aAUzC,MAAK;KAGZ;IACD,6EAA6E;IAC7E,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,IAAK,IAAI,EAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAC,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAC,EAAE,CAAE;YAC7C,gBAAgB;YAChB,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EACvB,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CACN,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;YAE5B,IAAG,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EACrB;gBAAA,IAAG,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC;oBACzB,IAAI,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EACnD,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;yBAUzC,MAAK;iBAER;aAAA,AACA;SAIJ;KAER;CAEJ;AACD,MAAM,aAAa,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,GAAK;IAC1C,yEAAyE;IACzE,IAAK,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE;QACtC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAC1B,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CACT,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;QAE5B,IAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC;YAClB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EACtD,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;iBAQrC,MAAK;SACZ;KAIJ;IACD,wEAAwE;IACxE,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAChB,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,kCAAkC;QAClC,IAAK,IAAI,EAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,EAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAC,EAAE,CAAE;YACvC,gBAAgB;YAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,UAAU,EAC1B,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CACT,SAAS,CACT,GAAG,CAAC,cAAc,CAAC;YAE5B,IAAG,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC;gBACtB,IAAI,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,EAElD,GAAG,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;qBAQtC,MAAK;aACX;SAIJ;KAER;CACJ;AACD,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,GAAK;IAC5B,oBAAoB;IACpB,MAAM,MAAM,GAAG,EAAE,AAAC;IAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAEpB;YAAA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBACpC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAChB,UAAU;gBACX,MAAM,CACL,IAAI,CAAC,KAAK,CAAC;gBAEhB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC5B,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,GAAG,CAAC;aACR;SAAA,AAEJ;QACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,MAAM,CAAC,cAAc,CAAC;QAC3B,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,MAAM,CAAC,QAAQ,CAAC;KACxB;CAGR;AACD,MAAM,YAAY,GAAG,IAAM;IACvB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,MAAM,CAAC,cAAc,CAAC;QAC3B,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,MAAM,CAAC,QAAQ,CAAC;QACrB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJ,SAAS,CACT,MAAM,CAAC,cAAc,CAAC;KAC9B;CAER;AACD,wDAAwD;AACxD,yCAAyC;AACzC,oCAAoC;AACpC,iBAAiB;AACjB,QAAQ;AAER,gBAAgB;AAChB,qBAAqB;AACrB,+BAA+B;AAE/B,IAAI;AACJ,MAAM,aAAa,GAAG,CAAC,YAAY,EAAE,KAAK,EAAC,GAAG,EAAC,MAAM,GAAK;IACtD,IAAG,YAAY,KAAK,KAAK,EAAE,OAAM;IACjC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC;CAEnC","sources":["script.js"],"sourcesContent":["const board = document.querySelector('#board');\r\n\r\nconst setSquares = (row) => {\r\n    for (let i = 0; i < 8; i++) {\r\n        const square = document.createElement('div');\r\n        square.setAttribute('class', `square row-${row}`)\r\n        board.append(square)\r\n\r\n    }\r\n}\r\nfor (let i = 0; i < 8; i++) {\r\n    setSquares(i)\r\n}\r\n\r\nconst s = [\r\n    [],\r\n    [],\r\n    [],\r\n    [],\r\n    [],\r\n    [],\r\n    [],\r\n    []\r\n];\r\n\r\nlet arr = s.map((el, i) => {\r\n\r\n    return [...document.querySelectorAll(`.row-${i}`)]\r\n})\r\n\r\nfor (let i = 0; i < arr.length; i++) {\r\n    for (let x = 0; x < arr[i].length; x++) {\r\n        if (i % 2 > 0) {\r\n            if (x % 2 > 0) {\r\n                arr[i][x].setAttribute('style', 'background-color:lightblue')\r\n            } else {\r\n                arr[i][x].setAttribute('style', 'background-color:white')\r\n            }\r\n        } else {\r\n            if (x % 2 == 0) {\r\n                arr[i][x].setAttribute('style', 'background-color:lightblue')\r\n            } else {\r\n                arr[i][x].setAttribute('style', 'background-color:white')\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//console.log(arr);\r\n\r\nconst boardPieces = [\r\n    {\r\n        code: 0,\r\n        name: 'king',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/138/138439.png'\r\n    }, {\r\n        code: 1,\r\n        name: 'king',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/138/138391.png'\r\n    }, {\r\n        code: 2,\r\n        name: 'queen',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/44/44502.png'\r\n    }, {\r\n        code: 3,\r\n        name: 'queen',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/2774/2774380.png'\r\n    }, {\r\n        code: 4,\r\n        name: 'bishop',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/5077/5077021.png'\r\n    }, {\r\n        code: 5,\r\n        name: 'bishop',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/5077/5077028.png'\r\n    }, {\r\n        code: 6,\r\n        name: 'knight',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/1342/1342584.png'\r\n    }, {\r\n        code: 7,\r\n        name: 'knight',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/1342/1342635.png'\r\n    }, {\r\n        code: 8,\r\n        name: 'rook',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/1626/1626883.png'\r\n    }, {\r\n        code: 9,\r\n        name: 'rook',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/1626/1626848.png'\r\n    }, {\r\n        code: 10,\r\n        name: 'pawn',\r\n        color: 'black',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/657/657487.png'\r\n    }, {\r\n        code: 11,\r\n        name: 'pawn',\r\n        color: 'white',\r\n        link: 'https://cdn-icons-png.flaticon.com/512/657/657588.png'\r\n    }\r\n];\r\n// set the inetial board pawns\r\nconst setPawnsPosetions = (row, color, pieceIndex, className) => {\r\n    for (let i = 0; i < 8; i++) {\r\n        const img = document.createElement('img');\r\n        img.setAttribute(\r\n            'src',\r\n            color == 'black'\r\n                ? boardPieces[pieceIndex].link\r\n                : boardPieces[pieceIndex + 1].link\r\n        );\r\n        img.setAttribute('class', `piece ${className} ${color}`)\r\n        row[i].append(img)\r\n    }\r\n}\r\nsetPawnsPosetions(arr[1], 'black', 10, 'pawn')\r\nsetPawnsPosetions(arr[6], 'white', 10, 'pawn')\r\n\r\n// set the inetial board pices\r\nconst setPieces = (row, color, index, pieceIndex, className) => {\r\n    const img = document.createElement('img');\r\n    img.setAttribute(\r\n        'src',\r\n        color == 'black'\r\n            ? boardPieces[pieceIndex].link\r\n            : boardPieces[pieceIndex + 1].link\r\n    );\r\n    img.setAttribute('class', `piece ${className} ${color}`)\r\n    row[index].append(img)\r\n}\r\n\r\nconst firstBoard = [\r\n    [\r\n        arr[0], 'black', 3, 0, 'king'\r\n    ],\r\n    [\r\n        arr[7], 'white', 3, 0, 'king'\r\n    ],\r\n    [\r\n        arr[0], 'black', 4, 2, 'queen'\r\n    ],\r\n    [\r\n        arr[7], 'white', 4, 2, 'queen'\r\n    ],\r\n    [\r\n        arr[0], 'black', 5, 4, 'pishop'\r\n    ],\r\n    [\r\n        arr[0], 'black', 2, 4, 'pishop'\r\n    ],\r\n    [\r\n        arr[7], 'white', 5, 4, 'pishop'\r\n    ],\r\n    [\r\n        arr[7], 'white', 2, 4, 'pishop'\r\n    ],\r\n    [\r\n        arr[0], 'black', 6, 6, 'knight'\r\n    ],\r\n    [\r\n        arr[0], 'black', 1, 6, 'knight'\r\n    ],\r\n    [\r\n        arr[7], 'white', 6, 6, 'knight'\r\n    ],\r\n    [\r\n        arr[7], 'white', 1, 6, 'knight'\r\n    ],\r\n    [\r\n        arr[0], 'black', 7, 8, 'rook'\r\n    ],\r\n    [\r\n        arr[0], 'black', 0, 8, 'rook'\r\n    ],\r\n    [\r\n        arr[7], 'white', 7, 8, 'rook'\r\n    ],\r\n    [\r\n        arr[7], 'white', 0, 8, 'rook'\r\n    ]\r\n]\r\nfirstBoard.forEach(el => {\r\n    setPieces(el[0], el[1], el[2], el[3], el[4])\r\n})\r\n\r\nboard.addEventListener('click', (e) => {\r\n\r\n    let current = e.target;\r\n\r\n    if (current.classList[2] == \"marked-empty\") {\r\n\r\n        checkMarked(current, arr)\r\n    }\r\n\r\n    if (current.classList[1] === 'pawn') {\r\n        pawnsMove(current, arr, current.classList[2])\r\n        //console.log(current.classList[2])\r\n    }\r\n    if (current.classList[1] === 'rook') {\r\n        rookMove(current)\r\n        //console.log(current.classList[2])\r\n    }\r\n\r\n})\r\n\r\nconst pawnsMove = (e, arr, color) => {\r\n    classRemover()\r\n\r\n    for (let i = 0; i < 8; i++) { // enter rows\r\n        for (let x = 0; x < 8; x++) { // enter columns\r\n            if (arr[i][x] === e.parentNode) {\r\n\r\n                if (e.classList[2] === 'black') {\r\n                    if (!arr[i][x].classList[2]) {\r\n                        if (i === 1) {\r\n                            arr[i][x]\r\n                                .classList\r\n                                .add(\"marked\")\r\n                            if (!arr[i + 1][x].firstChild) {\r\n                                //console.log(arr[i+1][x])\r\n                                arr[i + 1][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            if (!arr[i + 2][x].firstChild) {\r\n                                arr[i + 2][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            //console.log(arr[i+1][x+1].classList[2])\r\n                            if (\r\n                                arr[i + 1][x + 1]\r\n                                    ?.firstChild && arr[i + 1][x + 1].firstChild.classList[2] === 'white'\r\n                            ) {\r\n                                arr[i + 1][x + 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\")\r\n                            }\r\n                            if (\r\n                                arr[i + 1][x - 1]\r\n                                    ?.firstChild && arr[i + 1][x - 1].firstChild.classList[2] === 'white'\r\n                            ) {\r\n                                arr[i + 1][x - 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\")\r\n                            }\r\n\r\n                        }\r\n                        if (i > 1) {\r\n                            arr[i][x]\r\n                                .classList\r\n                                .add(\"marked\")\r\n                            if (!arr[i + 1][x].firstChild) {\r\n\r\n                                arr[i + 1][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            if (\r\n                                arr[i + 1][x + 1]\r\n                                    ?.firstChild && arr[i + 1][x + 1].firstChild.classList[2] === 'white'\r\n                            ) {\r\n                                arr[i + 1][x + 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\")\r\n                            }\r\n                            if (\r\n                                arr[i + 1][x - 1]\r\n                                    ?.firstChild && arr[i + 1][x - 1].firstChild.classList[2] === 'white'\r\n                            ) {\r\n                                arr[i + 1][x - 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\")\r\n                            }\r\n                            //arr[i+1][x].classList.add(\"marked-empty\")\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    console.log('on')\r\n                    if (!arr[i][x].classList[2]) {\r\n                        if (i === 6) {\r\n                            arr[i][x]\r\n                                .classList\r\n                                .add(\"marked\")\r\n                            if (!arr[i - 1][x].firstChild) {\r\n                                //console.log(arr[i-1][x])\r\n                                arr[i - 1][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            //console.log(arr[i-1][x-1].classList[2])\r\n\r\n                            if (!arr[i - 2][x].firstChild) {\r\n                                arr[i - 2][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            if (\r\n                                arr[i - 1][x + 1]\r\n                                    ?.firstChild && arr[i - 1][x + 1].firstChild.classList[2] === 'black'\r\n                            ) {\r\n                                arr[i - 1][x + 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\");\r\n                            }\r\n                            if (\r\n                                arr[i - 1][x - 1]\r\n                                    ?.firstChild && arr[i - 1][x - 1].firstChild.classList[2] === 'black'\r\n                            ) {\r\n                                arr[i - 1][x - 1]\r\n                                    .classList\r\n                                    .add(\"marked-enemy\")\r\n                            }\r\n\r\n                        }\r\n                        if (i < 6) {\r\n                            arr[i][x]\r\n                                .classList\r\n                                .add(\"marked\")\r\n                            if (!arr[i - 1][x].firstChild) {\r\n\r\n                                arr[i - 1][x]\r\n                                    .classList\r\n                                    .add(\"marked-empty\")\r\n                            }\r\n                            if (\r\n                                arr[i - 1][x - 1]\r\n                                    ?.firstChild\r\n                            ) {\r\n                                if (arr[i - 1][x - 1].firstChild.classList[2] === 'black') {\r\n                                    arr[i - 1][x - 1]\r\n                                        .classList\r\n                                        .add(\"marked-enemy\")\r\n                                }\r\n                            }\r\n                            if (\r\n                                arr[i - 1][x + 1]\r\n                                    ?.firstChild\r\n                            ) {\r\n                                if (arr[i - 1][x + 1].firstChild.classList[2] === 'black') {\r\n                                    arr[i - 1][x + 1]\r\n                                        .classList\r\n                                        .add(\"marked-enemy\")\r\n                                }\r\n                            }\r\n\r\n                            //arr[i+1][x].classList.add(\"marked-empty\")\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst rookMove = (e) => {\r\n    classRemover()\r\n    for (let i = 0; i < 8; i++) {\r\n        for (let x = 0; x < 8; x++) {\r\n\r\n            let current = e.parentNode == arr[i][x]\r\n                ? true\r\n                : false\r\n            let el = arr[i][x];\r\n            current && el\r\n                .classList\r\n                .add('marked')\r\n            let downTheBoard = current && countDown(i, 8)\r\n            let upTheBoard = current && countUp(i, 0)\r\n            let leftTheBoard = current && countUp(x, 0)\r\n            let rightTheBoard = current && countDown(x, 8)\r\n            //console.log(rightTheBoard)\r\n            if (current) {\r\n                addClassByColumn(downTheBoard, x, e.classList[2])\r\n                addClassByColumn(upTheBoard, x, e.classList[2])\r\n                addClassByRow(i, leftTheBoard, e.classList[2])\r\n               addClassByRow(i, rightTheBoard, e.classList[2])\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nconst countDown = (start, end) => {\r\n    let arr = [];\r\n    for (let i = start; i <= end; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\nconst countUp = (start, end) => {\r\n\r\n    let arr = [];\r\n    if (start === 0) {\r\n        return arr\r\n    }\r\n    for (let i = start; i >= end; i--) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\nconst addClassByColumn = (column, row, color) => {\r\n\r\n    for (let i = column[1]; i < column.at(-1); i++) {\r\n        //add avaliable squares at the bottum by calling a func and adding a class\r\n        if (!arr[i][row].firstChild) {  // if there's no piece on the square add a class\r\n            arr[i][row]\r\n                .classList\r\n                .add('marked-empty')\r\n        }\r\n        \r\n        if (arr[i][row]?.firstChild.classList[2] !== color) {\r\n            //console.log(arr[i][row].classList[2])\r\n            arr[i][row].classList.add('marked-enemy')\r\n            // classByColor(\r\n            //     color,\r\n            //     arr[i][row]?.firstChild.classList[2],\r\n            //     i,\r\n            //     row\r\n            // )\r\n            \r\n        } \r\n        else{\r\n            break\r\n        }\r\n        \r\n    }\r\n    //add avaliable squares at the top right by calling a func and adding a class\r\n    if (column.length > 0) {\r\n        if (column[0] > column.at(-1)) {\r\n            for (let i = column[1]; i >= column.at(-1); i--) {\r\n                //console.log(i)\r\n                if (!arr[i][row].firstChild) {  // if there's no piece on the square add a class\r\n                    arr[i][row]\r\n                        .classList\r\n                        .add('marked-empty')\r\n                } \r\n                if(arr[i][row].firstChild){\r\n                    if(arr[i][row].firstChild){\r\n                     if (arr[i][row]?.firstChild.classList[2] !== color) {\r\n                    arr[i][row].classList.add('marked-enemy')\r\n                    // classByColor(\r\n                    //     color,\r\n                    //     arr[i][row]?.firstChild.classList[2],\r\n                    //     i,\r\n                    //     row\r\n                    // )\r\n                  \r\n                }\r\n                else {\r\n                    break\r\n                }\r\n                }\r\n                }\r\n                \r\n               \r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nconst addClassByRow = (column, row, color) => {\r\n    //add avaliable squares to the right by calling a func and adding a class\r\n    for (let i = row[1]; i < row.at(-1); i++) {\r\n        if (!arr[column][i].firstChild) {  // if there's no piece on the square add a class\r\n            arr[column][i]\r\n                .classList\r\n                .add('marked-empty')\r\n        }\r\n        if(arr[i][row].firstChild){\r\n                if (arr[i][row]?.firstChild.classList[2] !== color) {\r\n            arr[i][row].classList.add('marked-enemy')\r\n            // classByColor(\r\n            //     color,\r\n            //     arr[column][i]?.firstChild.classList[2],\r\n            //     column,\r\n            //     i\r\n            // )\r\n           \r\n        }  else{break}  \r\n        }\r\n         \r\n        \r\n        \r\n    }\r\n    //add avaliable squares to the left by calling a func and adding a class\r\n    if (row.length > 0) { \r\n        if (row[0] > row.at(-1)) { \r\n            //console.log(row[0] , row.at(-1))\r\n            for (let i = row[1]; i >= row.at(-1); i--) {\r\n                //console.log(i)\r\n                if (!arr[column][i].firstChild) {   // if there's no piece on the square add a class\r\n                    arr[column][i]\r\n                        .classList\r\n                        .add('marked-empty')\r\n                }\r\n                if(arr[i][row].firstChild){\r\n                    if (arr[i][row]?.firstChild.classList[2] !== color) {\r\n\r\n                    arr[i][row].classList.add('marked-enemy')\r\n                    // classByColor(\r\n                    //     color,\r\n                    //     arr[column][i]?.firstChild.classList[2],\r\n                    //     column,\r\n                    //     i\r\n                    // )\r\n                   \r\n                } else{break}\r\n                }\r\n                \r\n               \r\n                 \r\n            }\r\n        }\r\n    }\r\n}\r\nconst checkMarked = (e, arr) => {\r\n    // console.log('on')\r\n    const marked = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        for (let x = 0; x < 8; x++) {\r\n            if (arr[i][x].firstChild) {\r\n\r\n                if (arr[i][x].classList[2] == 'marked') {\r\n                    let first = arr[i][x]\r\n                        .firstChild\r\n                        marked\r\n                        .push(first)\r\n\r\n                    arr[i][x].removeChild(first)\r\n                    e.append(marked[0])\r\n                    i = 0\r\n                }\r\n\r\n            }\r\n            arr[i][x]\r\n                .classList\r\n                .remove('marked-empty')\r\n            arr[i][x]\r\n                .classList\r\n                .remove('marked')\r\n        }\r\n    }\r\n\r\n}\r\nconst classRemover = () => {\r\n    for (let i = 0; i < 8; i++) { // enter rows\r\n        for (let x = 0; x < 8; x++) {\r\n            arr[i][x]\r\n                .classList\r\n                .remove(\"marked-empty\")\r\n            arr[i][x]\r\n                .classList\r\n                .remove(\"marked\")\r\n            arr[i][x]\r\n                .classList\r\n                .remove(\"marked-enemy\")\r\n        }\r\n    }\r\n}\r\n// const classByColor = (currentColor, color, i, x) => {\r\n//     //console.log(currentColor, color)\r\n//     if (currentColor === color) {\r\n//         return\r\n//     }\r\n\r\n//     arr[i][x]\r\n//         .classList\r\n//         .add('marked-enemy')\r\n\r\n// }\r\nconst classColorRow = (currentColor, color,row,column) => {\r\n    if(currentColor === color){return}\r\n    console.log(currentColor, color)\r\n\r\n}"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}